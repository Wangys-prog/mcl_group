#!/usr/bin/python
#File created on 2019/7/18

__author__ = "Wang,Yansu"
__copyright__ = "Copyright 2019, JSNU"
__license__ = "GPL"
__version__ = "1.0"
__maintainer__ = "Wang,yansu"
__email__ = "Wangys_c@hotmail.com"

import sys,os
from optparse import OptionParser

def MakeOption():
    """
    Rapidly evolving families from cafe(CAFE: a computational tool for the study of gene family evolution):
    The input file of rapidly evolving families was obtained by CAFE Report Analysis python script of Xu,gengzhou(https://www.jianshu.com/p/146093c91e2b)
    Input file format:
    Bg<22>:	OG0000018[+8*]	OG0000032[+57*]	OG0000035[+17*]	OG0000037[+4*]	OG0000088[+10*]	OG0000107[+17*]	OG0000110[+9*]	OG0000135[+3*]	OG0000136[+9*]	OG0000150[+4*]	OG0000179[+3*]	OG0000306[+5*]	OG0000328[+24*]	OG0000419[+15*]	OG0000473[+12*]	OG0000501[+36*]	OG0000528[+34*]	OG0000596[+12*]	OG0000652[+2*]	OG0000954[+27*]	OG0001132[+6*]	OG0001136[+28*]	OG0001484[+2*]	OG0006359[+15*]	OG0006361[+13*]	OG0006696[+12*]	OG0006697[+12*]	OG0006849[+9*]	OG0006882[+12*]	OG0007075[+11*]	OG0007076[+11*]	OG0007077[+8*]	OG0007511[+9*]	OG0007514[+9*]	OG0008362[+5*]	OG0008363[+4*]	OG0000065[-2*]	OG0000096[-2*]	OG0000215[-2*]	OG0000257[-2*]	OG0000266[-2*]	OG0000330[-2*]
    Um<4>:	OG0000308[+7*]	OG0000418[+5*]	OG0000726[+6*]	OG0001108[+3*]	OG0001256[+8*]	OG0001395[+13*]	OG0001847[+3*]	OG0002971[+22*]	OG0004707[+4*]	OG0006752[+3*]	OG0000024[-5*]	OG0000047[-3*]	OG0000050[-4*]	OG0000088[-3*]	OG0000104[-4*]	OG0000153[-3*]	OG0000168[-4*]	OG0000203[-4*]
   Vi<18>: OG0000001[+8*]	OG0000003[+1*]	OG0000012[+4*]	OG0000022[+5*]	OG0000024[+17*]	OG0000042[+5*]	OG0000045[+27*]	OG0000047[+4*]	OG0000049[+6*]	OG0000050[+4*]	OG0000051[+3*]	OG0000052[+17*]	OG0000056[+15*]	OG0000060[+5*]	OG0000061[+4*]	OG0000073[+3*]	OG0000094[+3*]	OG0000096[+3*]	OG0000097[+4*]	OG0000102[+6*]	OG0000103[+5*]	OG0000105[+12*]	OG0000108[+3*]	OG0000130[+11*]	OG0000143[+5*]	OG0000152[+3*]	OG0000154[+3*]	OG0000156[+9*]	OG0000162[+5*]	OG0000165[+3*]	OG0000209[+6*]	OG0000214[+4*]	OG0000226[+3*]	OG0000230[+5*]	OG0000239[+3*]	OG0000266[+5*]	OG0000267[+2*]	OG0000273[+4*]	OG0000305[+5*]	OG0000331[+7*]	OG0000358[+4*]	OG0000359[+3*]	OG0000385[+5*]	OG0000410[+4*]	OG0000417[+4*]	OG0000423[+3*]	OG0000454[+6*]	OG0000469[+2*]	OG0000565[+12*]	OG0000569[+2*]	OG0000590[+4*]	OG0000603[+6*]	OG0000682[+3*]	OG0000725[+4*]	OG0000734[+3*]	OG0000771[+7*]	OG0000775[+10*]	OG0000787[+2*]	OG0000812[+2*]	OG0000814[+3*]	OG0000815[+9*]	OG0000821[+4*]	OG0000826[+2*]	OG0000845[+4*]	OG0000860[+2*]	OG0000909[+5*]	OG0000957[+2*]	OG0001013[+3*]	OG0001030[+2*]	OG0001041[+3*]	OG0001058[+3*]	OG0001180[+3*]	OG0001383[+2*]	OG0001501[+3*]	OG0001572[+4*]	OG0001573[+4*]	OG0001576[+6*]	OG0001580[+4*]	OG0001581[+3*]	OG0001987[+2*]	OG0002243[+2*]	OG0002955[+3*]	OG0004006[+5*]	OG0004586[+2*]	OG0004612[+12*]	OG0004613[+17*]	OG0005047[+3*]	OG0005053[+2*]	OG0005062[+4*]	OG0005118[+2*]	OG0005125[+3*]	OG0005389[+2*]	OG0005533[+6*]	OG0005558[+3*]	OG0005867[+2*]	OG0005880[+3*]	OG0005902[+17*]	OG0005994[+2*]	OG0006100[+3*]	OG0006165[+2*]	OG0006325[+2*]	OG0006382[+2*]	OG0006479[+3*]	OG0006544[+2*]	OG0006555[+2*]	OG0006700[+3*]	OG0006810[+2*]	OG0006853[+2*]	OG0006901[+4*]	OG0006918[+4*]	OG0006993[+3*]	OG0007116[+10*]	OG0007139[+8*]	OG0007309[+3*]	OG0007341[+2*]	OG0007552[+4*]	OG0007572[+2*]	OG0007585[+5*]	OG0007601[+9*]	OG0007750[+2*]	OG0007987[+6*]	OG0008022[+3*]	OG0008156[+6*]	OG0008375[+3*]	OG0008565[+2*]	OG0009291[+3*]	OG0009300[+3*]	OG0009379[+3*]	OG0009466[+2*]	OG0000005[-4*]	OG0000008[-5*]	OG0000011[-3*]	OG0000028[-3*]	OG0000037[-3*]	OG0000071[-4*]	OG0000088[-2*]	OG0000189[-2*]	OG0000208[-2*]	OG0000232[-2*]	OG0000257[-2*]	OG0000309[-2*]	OG0000333[-2*]	OG0000387[-2*]	OG0000425[-2*]	OG0000513[-2*]	OG0000782[-2*]	OG0006379[-2*]
   <33>:  OG0000000[+14*]	OG0000001[+5*]	OG0000002[+3*]	OG0000004[+4*]	OG0000008[+3*]	OG0000009[+3*]	OG0000011[+6*]	OG0000012[+4*]	OG0000013[+2*]	OG0000014[+3*]	OG0000019[+3*]	OG0000025[+3*]	OG0000027[+3*]	OG0000030[+7*]	OG0000031[+2*]	OG0000036[+4*]	OG0000037[+5*]	OG0000053[+3*]	OG0000054[+5*]	OG0000055[+2*]	OG0000066[+2*]	OG0000067[+2*]	OG0000077[+2*]	OG0000086[+2*]	OG0000095[+2*]	OG0000096[+2*]	OG0000106[+3*]	OG0000112[+3*]	OG0000127[+2*]	OG0000129[+2*]	OG0000140[+3*]	OG0000161[+3*]	OG0000164[+4*]	OG0000170[+2*]	OG0000174[+5*]	OG0000178[+2*]	OG0000184[+2*]	OG0000187[+2*]	OG0000189[+2*]	OG0000211[+2*]	OG0000217[+3*]	OG0000218[+2*]	OG0000226[+2*]	OG0000227[+2*]	OG0000228[+2*]	OG0000236[+2*]	OG0000257[+2*]	OG0000258[+2*]	OG0000261[+3*]	OG0000262[+5*]	OG0000263[+2*]	OG0000268[+2*]	OG0000275[+3*]	OG0000291[+2*]	OG0000304[+1*]	OG0000308[+1*]	OG0000309[+2*]	OG0000345[+4*]	OG0000349[+2*]	OG0000363[+1*]	OG0000373[+2*]	OG0000392[+2*]	OG0000393[+4*]	OG0000396[+2*]	OG0000403[+2*]	OG0000429[+3*]	OG0000430[+1*]	OG0000438[+3*]	OG0000448[+1*]	OG0000457[+1*]	OG0000496[+2*]	OG0000532[+1*]	OG0000534[+1*]	OG0000537[+1*]	OG0000538[+1*]	OG0000544[+1*]	OG0000554[+1*]	OG0000559[+1*]	OG0000560[+2*]	OG0000564[+1*]	OG0000582[+2*]	OG0000592[+2*]	OG0000597[+2*]	OG0000603[+1*]	OG0000605[+1*]	OG0000619[+2*]	OG0000627[+1*]	OG0000643[+1*]	OG0000654[+2*]	OG0000665[+1*]	OG0000667[+1*]	OG0000668[+1*]	OG0000679[+1*]	OG0000689[+1*]	OG0000700[+2*]	OG0000702[+1*]	OG0000719[+3*]	OG0000762[+1*]	OG0000774[+1*]	OG0000781[+1*]	OG0000793[+2*]	OG0000796[+1*]	OG0000824[+1*]	OG0000834[+1*]	OG0000842[+1*]	OG0000843[+2*]	OG0000854[+1*]	OG0000860[+1*]	OG0000867[+1*]	OG0000876[+3*]	OG0000879[+1*]	OG0000887[+1*]	OG0000894[+1*]	OG0000895[+1*]	OG0000903[+1*]	OG0000940[+1*]	OG0000953[+1*]	OG0000956[+1*]	OG0000958[+1*]	OG0000996[+1*]	OG0001002[+1*]	OG0001003[+1*]	OG0001030[+1*]	OG0001031[+1*]	OG0001044[+1*]	OG0001050[+1*]	OG0001052[+1*]	OG0001060[+2*]	OG0001083[+2*]	OG0001113[+1*]	OG0001134[+1*]	OG0001181[+1*]	OG0001209[+1*]	OG0001253[+3*]	OG0001261[+1*]	OG0001262[+1*]	OG0001274[+1*]	OG0001378[+1*]	OG0001382[+1*]	OG0001417[+1*]	OG0001525[+1*]	OG0001539[+1*]	OG0001576[+1*]	OG0001578[+1*]	OG0001648[+1*]	OG0001686[+1*]	OG0001825[+1*]	OG0001828[+1*]	OG0001835[+1*]	OG0001856[+1*]	OG0001928[+1*]	OG0001941[+1*]	OG0001987[+1*]	OG0002304[+1*]	OG0002421[+1*]	OG0002423[+1*]	OG0002468[+1*]	OG0002947[+1*]	OG0002960[+1*]	OG0002964[+1*]	OG0003115[+1*]	OG0003127[+2*]	OG0003792[+1*]	OG0003891[+1*]	OG0003953[+1*]	OG0003960[+1*]	OG0004085[+1*]	OG0004600[+1*]	OG0004628[+1*]	OG0004629[+1*]	OG0004656[+1*]	OG0004703[+1*]	OG0005037[+1*]	OG0005062[+1*]	OG0005063[+1*]	OG0005370[+1*]	OG0005679[+1*]	OG0005731[+1*]	OG0005954[+1*]	OG0006069[+1*]	OG0006132[+1*]	OG0006239[+2*]	OG0006241[+1*]	OG0006313[+1*]	OG0006378[+1*]	OG0006422[+1*]	OG0006538[+1*]	OG0006759[+1*]	OG0006780[+1*]	OG0006798[+1*]	OG0006878[+1*]	OG0007092[+1*]	OG0007805[+1*]
   <25>: OG0000018[+4*]	 OG0000032[+4*]	OG0000035[+4*]	OG0000012[-2*]	OG0000019[-2*]	OG0000021[-2*]	OG0000049[-2*]	OG0000053[-2*]	OG0000081[-2*]	OG0000238[-2*]	OG0000365[-2*]	OG0000706[-2*]	OG0000779[-2*]
    """
    # make option
    parser = OptionParser(usage="%prog [-h] [-v] -i[--input=] -f [ref=] -o[--output=]",
                          version="%prog 1.0")
    parser.add_option("-i", "--input", action="store", dest="input",
                      help="Rapidly evolving families",
                      default=False)
    (options, args) = parser.parse_args()
    # extract option from command line
    input = options.input
    return (input)

def main():
    os.mkdir("result")
    os.chdir("result")
    output1 = open ("outfile_extension.txt","w")
    output2 = open ("outfile_contraction.txt","w")
    output3 = open ("sample_id_extension.txt","w")
    output4 = open ("sample_id_contraction.txt","w")
    os.chdir("../")
    input = MakeOption()
    c_dict = []
    d_dict = []
    for line in open(input,"r"):
        a_dict = []
        b_dict = []
        line =list(line.strip().split("\t"))
        output1.write("%s\t"% line[0])
        output2.write("%s\t" % line[0])
        for i in range(len(line)):
            if "[" and "+" in line[i]:
               a = str(line[i]).split("[")[0]
               a_dict.append(a)
               c_dict.append(a)
            elif "[" and "-" in line[i]:
               b = str(line[i]).split("[")[0]
               b_dict.append(b)
               d_dict.append(b)
        output1.write("%s\n"%("\t".join(a_dict)))
        output2.write("%s\n" % ("\t".join(b_dict)))
    output3.write("%s\n"%("\n".join(sorted(set(c_dict)))))
    output4.write("%s\n" % ("\n".join(sorted(set(d_dict)))))
if __name__=="__main__":
    main()







